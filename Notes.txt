Init
git init is used to create a repository.


Status
git status tell sus the state of our working directory.


.gitignore Files
.gitignore files tell git what it should completely ignore.


Adding Things
git add tells git to track specific files or folders
To selectively stage only certain changes using Patch Mode, we can use git add –p

Commits
A commit is a snapshot of the state of our repository at a certain point in time.
To commit changes, we first stage them using git add, then use git commit
We can also use Patch Mode and immediately commit by using git commit –p


Commit Messages
Commits should ideally contain only a few changes each: this lets us revert mistakes more easily
Commit messages are used to describe the changes we’ve made to the code
Write commit messages to explain “what this will do”, not “what I did”


Commit Logs
git log shows us all the commits that were made.
git log --oneline shows a summary view of all commits.


Diffs
Each commit has an SHA-1 hash, used to ID it
git diff <old commit> <new commit> shows us what’s changed between two commits
git diff alone shows the difference between our current state and the last commit


Branching
Git branches are like parallel universes where we can experiment or work on different things
git branch gives a list of all branches in the repository
To create a new branch, type git branch <branch name>
